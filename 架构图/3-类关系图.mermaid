classDiagram
    %% 游戏引擎相关类
    class GameEngine {
        +GamePhase game_phase
        +TurnPhase turn_phase
        +int current_player_index
        +int turn_count
        +GameBoard board
        +CardManager card_manager
        +List~Player~ players
        +roll_dice() bool
        +move_player() bool
        +trigger_square_event() bool
        +handle_card_decision() bool
        +end_turn() bool
    }

    class GamePhase {
        <<enumeration>>
        WAITING
        PLAYING
        PAUSED
        FINISHED
    }

    class TurnPhase {
        <<enumeration>>
        ROLL_DICE
        MOVE
        SQUARE_EVENT
        CARD_DECISION
        MARKET
        END_TURN
    }

    %% 棋盘相关类
    class GameBoard {
        +List~Square~ squares
        +int total_squares
        +get_square(position) Square
        +get_next_position(current, steps) int
    }

    class Square {
        <<abstract>>
        +string name
        +SquareType type
        +int position
        +trigger_event(player, engine) string
    }

    class SquareType {
        <<enumeration>>
        PAYCHECK
        OPPORTUNITY
        DOODAD
        MARKET
        CHARITY
        DOWNSIZED
        BABY
        START
    }

    %% 具体格子类
    class PaycheckSquare {
        +trigger_event(player, engine) string
    }

    class OpportunitySquare {
        +trigger_event(player, engine) string
    }

    class MarketSquare {
        +trigger_event(player, engine) string
    }

    class DoodadSquare {
        +List doodad_events
        +trigger_event(player, engine) string
    }

    %% 玩家相关类
    class Player {
        +string name
        +string profession
        +int salary
        +int cash
        +int passive_income
        +int expenses
        +int position
        +List assets
        +List liabilities
        +int children
        +receive_salary()
        +receive_passive_income()
        +pay_expenses()
        +buy_asset(asset, price) bool
        +is_financially_free() bool
    }

    %% 卡片相关类
    class CardManager {
        +Dict cards_by_type
        +draw_card(card_type) Card
        +get_total_cards() int
        +load_cards_from_file()
    }

    class Card {
        <<abstract>>
        +string id
        +string name
        +string description
        +CardType type
        +execute_purchase(player) bool
    }

    class CardType {
        <<enumeration>>
        ENTERPRISE
        OPPORTUNITY
        FINANCIAL
        SIDE_BUSINESS
    }

    %% 具体卡片类
    class InvestmentCard {
        <<abstract>>
        +int cost
        +int down_payment
        +int monthly_cash_flow
        +execute_purchase(player) bool
    }

    class EnterpriseCard {
        +bool requires_management
        +int employee_cost
        +execute_purchase(player) bool
    }

    class OpportunityCard {
        +string property_type
        +execute_purchase(player) bool
    }

    class SideBusinessCard {
        +int time_investment
        +execute_purchase(player) bool
    }

    class FinancialCard {
        +int price_per_share
        +int dividend_per_share
        +int min_shares
        +int max_shares
        +execute_purchase(player, shares) bool
    }

    %% UI相关类
    class MainWindow {
        +GameEngine game_engine
        +create_control_panel()
        +create_board_panel()
        +create_player_info_panel()
        +roll_dice()
        +move_player()
        +end_turn()
        +update_ui()
    }

    class GameLauncher {
        +create_ui()
        +start_game()
        +launch_game(players_data)
    }

    %% 继承关系
    Square <|-- PaycheckSquare
    Square <|-- OpportunitySquare
    Square <|-- MarketSquare
    Square <|-- DoodadSquare
    
    Card <|-- InvestmentCard
    Card <|-- FinancialCard
    InvestmentCard <|-- EnterpriseCard
    InvestmentCard <|-- OpportunityCard
    InvestmentCard <|-- SideBusinessCard

    %% 组合关系
    GameEngine o-- GameBoard
    GameEngine o-- CardManager
    GameEngine o-- Player
    GameEngine --> GamePhase
    GameEngine --> TurnPhase
    
    GameBoard o-- Square
    Square --> SquareType
    
    CardManager o-- Card
    Card --> CardType
    
    MainWindow o-- GameEngine 